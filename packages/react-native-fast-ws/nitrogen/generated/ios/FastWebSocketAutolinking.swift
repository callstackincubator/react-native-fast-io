///
/// FastWebSocketAutolinking.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

public final class FastWebSocketAutolinking {
  public typealias bridge = margelo.nitro.websocket.bridge.swift

  /**
   * Creates an instance of a Swift class that implements `HybridWebSocketManagerSpec`,
   * and wraps it in a Swift class that can directly interop with C++ (`HybridWebSocketManagerSpecCxx`)
   *
   * This is generated by Nitrogen and will initialize the class specified
   * in the `"autolinking"` property of `nitro.json` (in this case, `HybridWebSocketManager`).
   */
  public static func createWebSocketManager() -> bridge.std__shared_ptr_margelo__nitro__websocket__HybridWebSocketManagerSpec_ {
    let hybridObject = HybridWebSocketManager()
    return { () -> bridge.std__shared_ptr_margelo__nitro__websocket__HybridWebSocketManagerSpec_ in
      let __cxxWrapped = HybridWebSocketManagerSpecCxx(hybridObject)
      let __pointer = HybridWebSocketManagerSpecCxxUnsafe.toUnsafe(__cxxWrapped)
      return bridge.create_std__shared_ptr_margelo__nitro__websocket__HybridWebSocketManagerSpec_(__pointer)
    }()
  }
}
